<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:tx="http://www.springframework.org/schema/tx"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">


	<bean id="alfrescoUserMapper" class="es.silenus.cas.alfresco.DefaultAlfrescoUserPropertiesMapper"/>

	<bean id="externalAuthentication" class="es.silenus.cas.ldap.adaptors.FastBindLdapAuthenticationHandler">
		<property name="contextSource" ref="contextSource"/>
		<property name="filter" value="uid=%u,${ldap.user.search.base}"/>
		<property name="filters">
			<list>
			</list>
		</property>
	</bean>

	<bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg value="${ldap.url}"/>
		<property name="pooled" value="true"/>
		<property name="userDn" value="${ldap.bind.dn}"/>
		<property name="password" value="${ldap.bind.password}"/>
		<property name="baseEnvironmentProperties">
			<map>
				<entry key="java.naming.security.authentication" value="simple"/>
			</map>
		</property>
	</bean>

	<!-- External credential resolver -->
	<bean id="externalCredentialToPrincipalResolver"
				class="org.jasig.cas.authentication.principal.CredentialsToLDAPAttributePrincipalResolver">
		<property name="credentialsToPrincipalResolver">
			<bean class="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver" />
		</property>
		<property name="contextSource" ref="contextSource" />
		<property name="attributeRepository" ref="attributeRepository"/>

		<property name="filter" value="uid=%u" />
		<property name="principalAttributeName" value="uid" />
		<property name="searchBase" value="${ldap.user.search.base}" />
	</bean>



	<!-- Attribute repository -->
	<bean id="attributeRepository" class="org.jasig.services.persondir.support.ldap.LdapPersonAttributeDao">
		<property name="baseDN" value="${ldap.user.search.base}" />
		<!-- This query is used to find the entry for populating attributes. {0} will be replaced by the new Principal ID extracted from the ldap-->
		<property name="query" value="(uid={0})" />
		<property name="contextSource" ref="contextSource" />
	</bean>


	<!-- Defines role mappings -->
	<bean id="userDetailsService" class="org.springframework.security.userdetails.ldap.LdapUserDetailsService">
		<constructor-arg index="0" ref="userSearch"/>
		<constructor-arg index="1" ref="authPopulator"/>
		<property name="userDetailsMapper" ref="alfrescoDetailsMapper"/>
	</bean>

	<bean id="alfrescoDetailsMapper" class="es.silenus.cas.alfresco.AlfrescoUserContextMapper">
		<property name="objectClasses">
			<list>
				<value>inerOrgPerson</value>
				<value>posixAccount</value>
				<value>top</value>
			</list>
		</property>

		<property name="homePrefix" value="/home"/>

		<property name="organizationNameAttribute" value="ou"/>
		
		<property name="userFirstNameAttribute" value="cn"/>
		<property name="userLastNameAttribute" value="sn"/>
		<property name="userPasswordAttribute" value="userPassword"/>

		<property name="userMailAttribute" value="mail"/>
	</bean>

	<bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch" >
		<constructor-arg index="0" value="${ldap.user.search.base}"/>
		<constructor-arg index="1" value="uid={0}"/>
		<constructor-arg index="2" ref="contextSource"/>
	</bean>

	<bean id="authPopulator" class="org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator">
		<constructor-arg index="0" ref="contextSource"/>
		<constructor-arg index="1" value="${ldap.group.search.base}"/>
		<property name="groupSearchFilter" value="(memberUid={0})"/>
		<property name="groupRoleAttribute" value="cn"/>
	</bean>

</beans>